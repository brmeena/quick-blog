{"version":3,"sources":["constants/resourcetypes.js","services/resourceservice.js","components/error/CErrorMessage.js","views/blog/AddBlogPost.js","views/category/AddCategory.js","views/category/Categories.js","constants/roles.js","views/users/AddEditUser.js","views/users/UserList.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","assets/brand/logo.js","components/AppHeader.js","components/AppSidebarNav.js","components/sidebars/_admin_nav.js","components/sidebars/AdminSideBarNav.js","components/sidebars/_editor_nav.js","components/sidebars/EditorSideBarNav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"names":["BLOG_POST","USER","CATEGORY","base_url","process","validateResourceType","resourceType","resourcetypes","getAll","async","params","fetchservice","post","data","create","getById","id","get","update","postId","CErrorMessage","props","msg","style","color","AddBlogPost","editorRef","useRef","formikRef","history","useHistory","postObj","setPostObj","useState","categoryList","setCategoryList","search","useLocation","URLSearchParams","uploadImageApi","initValues","useEffect","console","log","resourceservice","then","postItem","cl","catch","err","validationSchema","Yup","title","required","description","category","ref","initialValues","onSubmit","values","current","getContent","window","alert","push","handleOnSubmit","enableReinitialize","md","className","name","as","value","disabled","map","ci","idx","_id","mod","type","size","cols","rows","tinymceScriptSrc","onInit","evt","editor","initialValue","content","init","height","menubar","plugins","toolbar","content_style","images_upload_url","automatic_uploads","AddCategory","resourceObj","setResourceObj","resourceId","resourceItem","Categories","categories","setCategories","categoryItemList","setCategoryItemList","tcategories","tmpCategoryItemList","categoryitem","scope","updated","to","href","AddEditUser","userObj","setUserObj","roles","submitError","setSubmitError","userId","resourceService","userItem","userid","re_password","oneOf","password","UserList","users","setUsers","userItemList","setUserItemList","tusers","tmpUserItemList","useritem","role","routes","path","exact","component","React","lazy","AppBreadcrumb","currentLocation","pathname","getRouteName","find","route","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","active","length","exception","getBreadcrumbs","breadcrumb","key","memo","AppContent","lg","fallback","authService","getUser","render","from","AppFooter","AppHeaderDropdown","variant","placement","caret","icon","cilUser","onClick","logout","cilAccountLogout","logo","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","user","position","fluid","cilMenu","alt","NavLink","activeClassName","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","Fragment","_nav","CNavItem","cilSpeedometer","customClassName","CNavTitle","cilPen","cilTags","AdminSideBarNav","AdminNavigation","EditorSideBarNav","EditorNavigation","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","DefaultLayout"],"mappings":"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","file":"static/js/7.56d4d75c.chunk.js","sourcesContent":["export default {\n    BLOG_POST:\"blogpost\",\n    USER:\"user\",\n    CATEGORY:\"category\",\n}","import resourcetypes from \"src/constants/resourcetypes\";\nimport fetchservice from \"./fetchservice\";\nconst base_url=process.env.REACT_APP_API_URL;\nexport default {\n   getAll,\n   create,\n   getById,\n   update,\n}\n\nfunction validateResourceType(resourceType){\n   switch(resourceType){\n      case resourcetypes.BLOG_POST:\n         return;\n      case resourcetypes.USER:\n         return;\n      case resourcetypes.CATEGORY:\n            return;\n            \n   }\n   throw \"invalid resource type :\"+resourceType;\n}\n\nasync function getAll(resourceType,params)\n{\n     validateResourceType(resourceType);\n     let resources=await fetchservice.post(`${base_url}/api/resources/${resourceType}/getall`,params);\n     //console.log(\"got axios response\");\n     //console.log(posts.data);\n     return resources.data;\n}\n\nasync function getById(resourceType,id)\n{\n   validateResourceType(resourceType);\n     let resources=await fetchservice.get(`${base_url}/api/resources/${resourceType}/${id}`);\n     return resources.data;\n}\n\n\n\nasync function create(resourceType,params){\n   validateResourceType(resourceType);\n   return await fetchservice.post(`${base_url}/api/resources/${resourceType}/create`,params);\n}\n\nasync function update(resourceType,postId,params)\n{\n   validateResourceType(resourceType);\n   return await fetchservice.post(`${base_url}/api/resources/${resourceType}/update/${postId}`,params);\n}","import { ErrorMessage } from \"formik\"\nimport React from \"react\"\nconst CErrorMessage = (props) =>{\n    return (\n        <>\n        <ErrorMessage {...props} >\n        { msg => <div style={{ color: 'red' }}>{msg}</div> }\n        </ErrorMessage>\n        </>\n    )\n}\n\nexport default CErrorMessage;\n","import { CButton, CFormLabel, CRow,CCol } from '@coreui/react';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { Form } from 'formik';\nimport React,{useRef,useEffect, useState} from 'react';\nimport * as Yup from 'yup';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useLocation } from 'react-router-dom';\nimport resourceservice from 'src/services/resourceservice';\nimport resourcetypes from 'src/constants/resourcetypes';\nimport CErrorMessage from 'src/components/error/CErrorMessage';\nfunction AddBlogPost() {\n    const editorRef = useRef(null);\n    const formikRef= useRef(null);\n    const history= useHistory();\n    const [postObj,setPostObj]=useState({'title':'','description':'','content':'','category':''});\n    const [categoryList,setCategoryList] = useState(null)\n    const search = useLocation().search;\n    const postId = new URLSearchParams(search).get('id');\n    const uploadImageApi=`${process.env.REACT_APP_API_URL}/api/services/upload/image`\n\n    let initValues={\n        'title':postObj['title'],\n        'description':postObj['description'],\n        'content':postObj['content'],\n        'category':postObj['category'],\n    };\n    useEffect(()=> {\n        if(postId){\n            console.log(\"id is \"+postId);\n            resourceservice.getById(resourcetypes.BLOG_POST,postId).then((postItem)=> {\n                console.log(postItem);\n                setPostObj(postItem);\n            });\n        }\n        else{\n            console.log(\"id is null\");\n        }\n    },[]);\n\n    useEffect(()=> {\n           resourceservice.getAll(resourcetypes.CATEGORY)\n           .then((cl)=> {\n               setCategoryList(cl);\n           })\n           .catch((err)=> {\n               console.log(err);\n           })\n    },[])\n    const validationSchema=Yup.object({\n        title:Yup.string().required(\"Required\"),\n        description:Yup.string().required(\"required\"),\n        category:Yup.string().required(\"Required\"),\n    });\n    const handleOnSubmit=(values)=>{\n        console.log(\"handle on submit called\");\n        if (editorRef.current) {\n            values['content']=editorRef.current.getContent();\n        }\n        console.log(values);\n        if(postId)\n        {\n            console.log(\"updating blog post: \"+postId);\n            resourceservice.update(resourcetypes.BLOG_POST, postId,values).then(()=>{\n                window.alert(\"post updated\");\n                history.push(\"/blogposts\");\n            })\n        }\n        else{\n            resourceservice.create(resourcetypes.BLOG_POST,values).then(()=>{\n                window.alert(\"post created\");\n                history.push(\"/blogposts\");\n            })\n        }\n    }\n\n  return (\n    <div>\n        <h2>Add Blog Post</h2>\n        <Formik\n        ref={formikRef}\n        initialValues={initValues}\n        validationSchema={validationSchema}\n        onSubmit={(values)=>{\n            handleOnSubmit(values)\n        }}\n        enableReinitialize\n        >\n            <Form>\n                <CRow>\n                    <CCol md=\"2\">\n                        <div className='form-group'>\n                    <CFormLabel>Blog Category</CFormLabel><br/>\n                    <Field \n                        name=\"category\" \n                        className=\"form-input\" \n                        as=\"select\" \n                    >\n                    <option value=\"\" disabled></option>\n                    {  categoryList && categoryList.map((ci,idx)=> (\n                        <option value={ci._id} key={idx}>{ci.name}</option>\n                    ))\n                    }\n                    </Field>\n                    <CErrorMessage name=\"category\"/>\n                    </div>\n                    </CCol>\n                    <CCol mod=\"10\">\n\n                    <div className='form-group'>\n                        <CFormLabel>Blog title</CFormLabel><br/>\n                        <Field name=\"title\" className=\"form-input\" type=\"text\" size=\"80\"/>\n                        <CErrorMessage name=\"title\"/>\n                    </div>\n                    </CCol>\n                </CRow><br/>\n                <div className='form-group'>\n                <CFormLabel>Blog Description</CFormLabel><br/>\n                <Field name=\"description\" className=\"form-input\" as=\"textarea\" cols=\"80\" rows=\"2\"/>\n                <CErrorMessage name=\"description\"/>\n                </div><br/>\n                <div className='form-group'>\n                <CFormLabel>Blog Content</CFormLabel><br/>\n                <Editor\n                name=\"content\" \n                tinymceScriptSrc=\"tinymce/js/tinymce/tinymce.min.js\"\n                onInit={(evt, editor) => editorRef.current = editor}\n                initialValue={postObj.content}\n                init={{\n                  height: 300,\n                  menubar: false,\n                  plugins: [\n                    'advlist autolink textcolor lists link charmap print preview anchor',\n                    'searchreplace visualblocks code fullscreen',\n                    'insertdatetime table paste code help wordcount image'\n                  ],\n                  toolbar: 'undo redo | formatselect | ' +\n                  'bold italic forecolor backcolor | alignleft aligncenter ' +\n                  'alignright alignjustify | bullist numlist outdent indent |image ',\n                  content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',\n                  images_upload_url: uploadImageApi,\n                  automatic_uploads: true,\n                }}>\n                </Editor>\n                </div>\n                <br/>\n                <CButton type=\"submit\">Save</CButton>\n                \n            </Form>\n        </Formik>\n\n    </div>\n  )\n};\nexport default AddBlogPost;","import { CButton, CFormLabel } from '@coreui/react';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { Form } from 'formik';\nimport React,{useRef,useEffect, useState} from 'react';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useLocation } from 'react-router-dom';\nimport resourceservice from 'src/services/resourceservice';\nimport resourcetypes from 'src/constants/resourcetypes';\nimport CErrorMessage from 'src/components/error/CErrorMessage';\nfunction AddCategory() {\n    const formikRef= useRef(null);\n    const history= useHistory();\n    const [resourceObj,setResourceObj]=useState({'title':'','description':'','name':''});\n    const search = useLocation().search;\n    const resourceId = new URLSearchParams(search).get('id');\n    let initValues={\n        'title':resourceObj['title'],\n        'description':resourceObj['description'],\n        'name':resourceObj['name'],\n    };\n    useEffect(()=> {\n        if(resourceId){\n            console.log(\"id is \"+resourceId);\n            resourceservice.getById(resourcetypes.CATEGORY,resourceId).then((resourceItem)=> {\n                console.log(resourceItem);\n                setResourceObj(resourceItem);\n            });\n        }\n        else{\n            console.log(\"id is null\");\n        }\n    },[]);\n    const validationSchema=Yup.object({\n        title:Yup.string().required(\"Required\"),\n        name:Yup.string().required(\"Required\"),\n        description:Yup.string().required(\"Required\"),\n        \n    });\n    const handleOnSubmit=(values)=>{\n        console.log(\"handle on submit called\");\n        console.log(values);\n        if(resourceId)\n        {\n            console.log(\"updating resource: \"+resourceId);\n            resourceservice.update(resourcetypes.CATEGORY, resourceId,values).then(()=>{\n                window.alert(\"resource updated\");\n                history.push(\"/categories\");\n            })\n        }\n        else{\n            resourceservice.create(resourcetypes.CATEGORY,values).then(()=>{\n                window.alert(\"resource created\");\n                history.push(\"/categories\");\n            })\n        }\n    }\n\n  return (\n    <div>\n        <h2>Add Blog Category</h2>\n        <Formik\n        ref={formikRef}\n        initialValues={initValues}\n        validationSchema={validationSchema}\n        onSubmit={(values)=>{\n            handleOnSubmit(values)\n        }}\n        enableReinitialize\n        >\n            <Form>\n            <div className='form-group'>\n                <CFormLabel>Category Name</CFormLabel><br/>\n                <Field name=\"name\" className=\"form-input\" type=\"text\" size=\"30\"/>\n                <CErrorMessage name=\"name\"/>\n                </div><br/>\n                \n                <div className='form-group'>\n                <CFormLabel>Category title</CFormLabel><br/>\n                <Field name=\"title\" className=\"form-input\" type=\"text\" size=\"80\"/>\n                <CErrorMessage name=\"title\"/>\n                </div><br/>\n                <div className='form-group'>\n                <CFormLabel>Category Description</CFormLabel><br/>\n                <Field name=\"description\" className=\"form-input\" as=\"textarea\" cols=\"80\" rows=\"2\"/>\n                <CErrorMessage name=\"description\"/>\n                </div><br/>\n                <br/>\n                <CButton type=\"submit\">Save</CButton>\n                \n            </Form>\n        </Formik>\n\n    </div>\n  )\n};\nexport default AddCategory;","import React, { lazy,useEffect,useState } from 'react'\nimport { CButton, CTable, CTableBody,CTableHead,CTableRow,CTableHeaderCell,CTableDataCell } from '@coreui/react'\n\nimport { Link } from 'react-router-dom'\nimport resourceservice from 'src/services/resourceservice';\nimport resourcetypes from 'src/constants/resourcetypes';\nconst Categories=()=>{\n  const [categories, setCategories] = useState([]);\n  const [categoryItemList,setCategoryItemList]=useState(\"\");\n  useEffect(() => {\n    resourceservice.getAll(resourcetypes.CATEGORY).then(tcategories=>{\n      //console.log(tposts);\n      setCategories(tcategories);\n      let tmpCategoryItemList=tcategories.map((categoryitem) => \n        (\n          <CTableRow key={categoryitem._id}>\n          <CTableDataCell scope=\"row\">{categoryitem.name}</CTableDataCell>\n          <CTableDataCell>{categoryitem.updated}</CTableDataCell>\n          <CTableDataCell><Link to={`/editcategory?id=${categoryitem._id}`}>Edit</Link></CTableDataCell>\n          </CTableRow>\n      ));\n      setCategoryItemList(tmpCategoryItemList);\n      console.log(categoryItemList);\n    });\n\n    return () => {\n    }\n  }, [])\n  return (\n        <div>\n          <CButton type=\"link\" href=\"#addcategory\">Create Category</CButton>\n            <h2>Blog categories will come here</h2>\n            <CTable>\n            <CTableHead>\n              <CTableRow>\n                <CTableHeaderCell scope=\"col\">Category Name</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Last Update Date</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {categoryItemList}\n            </CTableBody>\n          </CTable>\n        </div>\n    )\n}\n\nexport default Categories","export default{\n    ADMIN:\"Admin\",\n    EDITOR:\"Editor\"\n}","import { CButton, CCol, CContainer, CFormLabel, CRow } from '@coreui/react';\nimport { ErrorMessage, Field, Formik } from 'formik';\nimport { Form } from 'formik';\nimport React,{useRef,useEffect, useState} from 'react';\nimport * as Yup from 'yup';\nimport resourceService from 'src/services/resourceservice';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useLocation } from 'react-router-dom';\nimport resourcetypes from 'src/constants/resourcetypes';\nimport roles from 'src/constants/roles';\nimport CErrorMessage from 'src/components/error/CErrorMessage';\nfunction AddEditUser() {\n    const editorRef = useRef(null);\n    const formikRef= useRef(null);\n    const history= useHistory();\n    const [userObj,setUserObj]=useState({'name':'','role':roles.EDITOR,'userid':''});\n    const [submitError,setSubmitError]=useState(\"\");\n    const search = useLocation().search;\n    const userId = new URLSearchParams(search).get('id');\n\n    let initValues={\n        'name':userObj['name'],\n        'role':userObj['role'],\n        'userid':userObj['userid'],\n    };\n    useEffect(()=> {\n        if(userId){\n            console.log(\"id is \"+userId);\n            resourceService.getById(resourcetypes.USER,userId).then((userItem)=> {\n                console.log(userItem);\n                setUserObj(userItem);\n            })\n            .catch((err)=> {\n                console.log(err);\n            })\n        }\n        else{\n            console.log(\"id is null\");\n        }\n    },[]);\n    let validationSchema={};\n    if(userId)\n    {\n        validationSchema=Yup.object({\n        name:Yup.string().required(\"Required\"),\n        userid:Yup.string().required(\"user id is required\"),\n        re_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n        });\n    }\n    else{\n        validationSchema = Yup.object({\n        name:Yup.string().required(\"Required\"),\n        userid:Yup.string().required(\"user id is required\"),\n        password:Yup.string().required(\"password is required\"),\n        re_password: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n        });\n    }     \n    \n    const handleOnSubmit=(values)=>{\n        console.log(\"handle on submit called\");\n        setSubmitError(\"\");\n        if(userId)\n        {\n            console.log(\"updating user details: \"+userId);\n            resourceService.update(resourcetypes.USER,userId,values).then(()=>{\n                window.alert(\"user updated\");\n                history.push(\"/users\");\n            })\n            .catch((err)=>{\n                console.log(err);\n                setSubmitError(\"Unable to update user.\")\n            })\n        }\n        else{\n            resourceService.create(resourcetypes.USER, values).then(()=>{\n                window.alert(\"user created\");\n                history.push(\"/users\");\n            })\n            .catch((err)=> {\n                console.log(err);\n                setSubmitError(\"unable to create user\")\n            })\n        }\n    }\n\n  return (\n    <div>\n        <h2>Add User</h2>\n        <Formik\n        ref={formikRef}\n        initialValues={initValues}\n        validationSchema={validationSchema}\n        onSubmit={(values)=>{\n            handleOnSubmit(values)\n        }}\n        enableReinitialize\n        >\n            \n            <Form>\n                <CContainer>\n                <CRow>\n                <CCol md={3}>\n                <CFormLabel>Name</CFormLabel><br/>\n                <Field name=\"name\" className=\"form-input\" type=\"text\"/><br/>\n                <CErrorMessage name=\"name\"/>\n                </CCol>\n                <CCol md={3}>\n                <CFormLabel>User Id</CFormLabel><br/>\n                <Field name=\"userid\" className=\"form-input\" type=\"text\"\n                 disabled={(userId && true)}\n                />\n                <br/>\n                <CErrorMessage name=\"userid\"/>\n                </CCol>\n                <CCol md={3}>\n                <CFormLabel>User Role</CFormLabel><br/>\n                <Field name=\"role\" as=\"select\">\n                   <option value=\"Editor\">Editor</option>\n                   <option value=\"Admin\">Admin</option>\n                   \n                </Field>\n                </CCol>\n                </CRow>\n            \n                <CRow className=\"mt-3\">\n                    <CCol md={3}>\n                      <CFormLabel>Password</CFormLabel><br/>\n                      <Field name=\"password\" type=\"password\"></Field>  \n                      <CErrorMessage name=\"password\"/>\n                    </CCol>\n                    <CCol md={3}>\n                      <CFormLabel>Re-Enter Password</CFormLabel><br/>\n                      <Field name=\"re_password\" type=\"password\"></Field>  \n                      <CErrorMessage name=\"re_password\"/>\n                    </CCol>\n                \n                </CRow>\n                <br/>\n             \n                <CButton type=\"submit\">Save</CButton><br/>\n                {(submitError && (\n                    <p style={{color:\"red\"}}>{submitError}</p>\n                ))}\n                </CContainer>\n            </Form>\n        </Formik>\n\n    </div>\n  )\n};\nexport default AddEditUser;","import React, { lazy,useEffect,useState } from 'react'\nimport { CButton, CTable, CTableBody,CTableHead,CTableRow,CTableHeaderCell,CTableDataCell,CRow,CContainer,CCol } from '@coreui/react'\nimport resourceService from '../../services/resourceservice'\nimport { Link } from 'react-router-dom'\nimport resourcetypes from 'src/constants/resourcetypes'\nconst UserList=()=>{\n  const [users, setUsers] = useState([]);\n  const [userItemList,setUserItemList]=useState(\"\");\n  useEffect(() => {\n    resourceService.getAll(resourcetypes.USER).then(tusers=>{\n      //console.log(tposts);\n      setUsers(tusers);\n      let tmpUserItemList=tusers.map((useritem) => \n        (\n          <CTableRow key={useritem._id}>\n          <CTableDataCell scope=\"col\">{useritem.name}</CTableDataCell>\n          <CTableDataCell scope=\"col\">{useritem.userid}</CTableDataCell>\n          <CTableDataCell scope=\"col\">{useritem.role}</CTableDataCell>\n          <CTableDataCell scope=\"col\"><Link to={`/edituser?id=${useritem._id}`}>Edit</Link></CTableDataCell>\n          </CTableRow>\n      ));\n      setUserItemList(tmpUserItemList);\n      console.log(userItemList);\n    });\n\n    return () => {\n    }\n  }, [])\n  return (\n        <div>\n          <CContainer>\n            <CRow>\n            <CCol md={5}><h2>User List will come here</h2>\n            </CCol>\n            <CCol md={3}>\n            <CButton type=\"link\" href=\"#adduser\">Create User</CButton>\n            </CCol>\n            </CRow>\n            <CTable>\n            <CTableHead>\n              <CTableRow className='table-primary'>\n                <CTableHeaderCell scope=\"col\">User Name</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">User Id</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">User Role</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {userItemList}\n            </CTableBody>\n          </CTable>\n          </CContainer>\n        </div>\n    )\n}\n\nexport default UserList","import React from 'react'\nimport AddBlogPost from './views/blog/AddBlogPost'\nimport AddCategory from './views/category/AddCategory'\nimport Categories from './views/category/Categories'\nimport AddEditUser from './views/users/AddEditUser'\nimport UserList from './views/users/UserList'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst BlogPosts = React.lazy(() => import('./views/blog/BlogPosts'))\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/blogposts', name: 'Blog Posts', component: BlogPosts },\n  { path: '/addpost', name: 'Add Post', component: AddBlogPost },\n  { path: '/editpost', name: 'Edit Post', component: AddBlogPost },\n  { path: '/users', name: 'User List', component: UserList },\n  { path: '/adduser', name: 'Add user', component: AddEditUser },\n  { path: '/edituser', name: 'Add user', component: AddEditUser },\n  { path: '/categories', name: 'Blog Categories', component: Categories },\n  { path: '/addcategory', name: 'Add Category', component: AddCategory },\n  { path: '/editcategory', name: 'Edit Category', component: AddCategory },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute.name\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    try{\n      location.split('/').reduce((prev, curr, index, array) => {\n        const currentPathname = `${prev}/${curr}`\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: getRouteName(currentPathname, routes),\n          active: index + 1 === array.length ? true : false,\n        })\n        return currentPathname\n      })\n   }\n   catch(exception)\n   {\n      console.log(exception);\n   }\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport {authService} from \"../services/authservice\"\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n          {(authService.getUser && (\n            <Switch>\n            {routes.map((route, idx) => {\n            return (\n              route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={(props) => (\n                    <>\n                      <route.component {...props} />\n                    </>\n                  )}\n                />\n              )\n            )\n          })}\n          <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n          ))}\n          {(!authService.getUser && (\n            <Switch>\n             <Redirect from=\"*\" to=\"/login\" />\n          </Switch>\n          ))}        \n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CDropdown,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilAccountLogout,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { authService } from 'src/services/authservice'\nimport { useHistory } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const history=useHistory();\n  const logout=()=> {\n      authService.logout()\n      .then(()=> {\n        console.log(\"logout successfull\");\n        history.push(\"/login\");\n      })\n      .catch((err)=> {\n        window.alert(\"Unable to logout\");\n      })\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CIcon icon={cilUser} className=\"me-2\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem onClick={()=>logout()}>\n          <CIcon icon={cilAccountLogout} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","export const logo = [\n  '608 134',\n  `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\nimport { authService } from 'src/services/authservice'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  const user = authService.getUser\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink} activeClassName=\"active\">\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          {user.role} Panel\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: 'active',\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilFunctions,\n  cilGroup,\n  cilNotes,\n  cilPen,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilTags,\n  cilUser,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Blog',\n  },\n  {\n    component: CNavItem,\n    name: 'Posts',\n    to: '/blogposts',\n    icon: <CIcon icon={cilPen} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Categories',\n    to: '/categories',\n    icon: <CIcon icon={cilTags} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Users',\n    to: '/users',\n    icon: <CIcon icon={cilUser} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from \"react\";\nimport AdminNavigation from \"./_admin_nav\" \nimport { AppSidebarNav } from \"../AppSidebarNav\";\nconst AdminSideBarNav =()=> {\n    return (\n        <>\n        <AppSidebarNav items={AdminNavigation} />\n        </>\n    )\n}\nexport default AdminSideBarNav;","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPen,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilUser,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Blog',\n  },\n  {\n    component: CNavItem,\n    name: 'Posts',\n    to: '/blogposts',\n    icon: <CIcon icon={cilPen} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from \"react\";\nimport EditorNavigation from \"./_editor_nav\" \nimport { AppSidebarNav } from \"../AppSidebarNav\";\nconst EditorSideBarNav =()=> {\n    return (\n        <>\n        <AppSidebarNav items={EditorNavigation} />\n        </>\n    )\n}\nexport default EditorSideBarNav","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport { authService } from 'src/services/authservice'\nimport roles from 'src/constants/roles'\nimport AdminSideBarNav from \"./sidebars/AdminSideBarNav\"\nimport EditorNavigation from './sidebars/EditorSideBarNav'\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  const user = authService.getUser\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarNav>\n        <SimpleBar>\n          {(user.role==roles.ADMIN && (\n            <AdminSideBarNav/>\n          ))\n          }\n          {(user.role==roles.EDITOR && (\n            <EditorNavigation/>\n          ))\n          }\n           </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"sourceRoot":""}