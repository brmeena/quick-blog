{"version":3,"sources":["components/error/CErrorMessage.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","views/pages/login/Login.js"],"names":["CErrorMessage","props","msg","style","color","cilLockLocked","Login","userId","setUserId","useState","password","setPassword","authError","setAuthError","history","useHistory","location","useLocation","className","md","onSubmit","event","console","log","authService","authenticate","then","user","data","token","push","reload","catch","err","icon","cilUser","placeholder","autoComplete","onChange","e","target","value","type","xs"],"mappings":"4KAAA,2BAYeA,IAVQC,GAEf,mCACA,cAAC,IAAD,IAAkBA,EAAlB,SACEC,GAAO,qBAAKC,MAAO,CAAEC,MAAO,OAArB,SAA+BF,S,iCCNhD,kCAAO,MAAMG,EAAgB,CAAC,UAAU,+Q,iCCAxC,qFAoGeC,UA/ED,KACZ,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAaF,mBAAS,KAC/BG,EAAUC,GAAeJ,mBAAS,IACnCK,EAASC,uBACTC,EAAWC,wBAkBjB,OACE,qBAAKC,UAAU,yDAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,UAAU,yBAAhB,SACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOD,UAAU,MAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CACAE,SA1BIC,IAClBC,QAAQC,IAAI,oBACZV,EAAa,IACbW,IAAYC,aAAalB,EAAOG,GAC/BgB,MAAMC,IACLL,QAAQC,IAAI,0BACZD,QAAQC,IAAII,GACZL,QAAQC,IAAI,YAAYI,EAAKC,KAAKC,OAClCf,EAAQgB,KAAK,cACbd,EAASe,YAEVC,OAAOC,IACNX,QAAQC,IAAIU,GACZpB,EAAa,uBAYD,UAEE,uCACA,mBAAGK,UAAU,uBAAb,qCACA,eAAC,IAAD,CAAaA,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgB,KAAMC,QAEf,cAAC,IAAD,CAAYC,YAAY,WAAWC,aAAa,WAChDC,SAAWC,GAAK/B,EAAU+B,EAAEC,OAAOC,YAErC,eAAC,IAAD,CAAavB,UAAU,OAAvB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOgB,KAAM7B,QAEf,cAAC,IAAD,CACEqC,KAAK,WACLN,YAAY,WACZC,aAAa,mBACbC,SAAWC,GAAK5B,EAAY4B,EAAEC,OAAOC,YAGzC,cAAC,IAAD,UACE,cAAC,IAAD,CAAME,GAAI,EAAV,SACE,cAAC,IAAD,CAASvC,MAAM,UAAUsC,KAAK,SAASxB,UAAU,OAAjD,uBAMFN,GACA,cAAC,IAAD,UACA,cAAC,IAAD,UACE,mBAAGT,MAAO,CAACC,MAAM,OAAjB,SAA0BQ","file":"static/js/8.65b9a015.chunk.js","sourcesContent":["import { ErrorMessage } from \"formik\"\nimport React from \"react\"\nconst CErrorMessage = (props) =>{\n    return (\n        <>\n        <ErrorMessage {...props} >\n        { msg => <div style={{ color: 'red' }}>{msg}</div> }\n        </ErrorMessage>\n        </>\n    )\n}\n\nexport default CErrorMessage;\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport {authService} from 'src/services/authservice'\nimport CErrorMessage from 'src/components/error/CErrorMessage'\nimport { useLocation } from 'react-router-dom'\n\nconst Login = () => {\n  const [userId,setUserId]= useState(\"\");\n  const [password,setPassword]=useState(\"\");\n  const [authError,setAuthError]= useState(\"\");\n  const history= useHistory();\n  const location = useLocation();\n  const handleSubmit=(event)=> {\n    console.log(\"on submit called\");\n    setAuthError(\"\");\n    authService.authenticate(userId,password)\n    .then((user)=> {\n      console.log(\"successfully logged in\");\n      console.log(user);\n      console.log(\"token is \"+user.data.token);\n      history.push(\"/dashboard\");\n      location.reload();\n    })\n    .catch((err)=> {\n      console.log(err);\n      setAuthError(\"Unable to login\")\n    })\n\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                  onSubmit={handleSubmit}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"Username\" autoComplete=\"username\"\n                      onChange={(e)=> setUserId(e.target.value)} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        onChange={(e)=> setPassword(e.target.value)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" type=\"submit\" className=\"px-4\">\n                          Login\n                        </CButton>\n                      </CCol>\n  \n                    </CRow>\n                    {(authError) && (\n                      <CRow>\n                      <CCol>\n                        <p style={{color:'red'}}>{authError}</p>\n                      </CCol>\n                      </CRow>\n                    )}\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}